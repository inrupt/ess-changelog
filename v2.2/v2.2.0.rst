.. _v2.2.0: 

v2.2.0
======

*Released: Upcoming* 


Access Grants
-------------


Updates
~~~~~~~

* Use ``365D`` (365 days) as the default duration of access requests/grants.
* This optimizes the internal JSON-LD processing when validating access credentials
* Improve logging output and structure for the Access Grant service
* When a client requests a status list resource from the Access Grant service, the corresponding audit message now has a more accurate text description

Bugs fixed
~~~~~~~~~~

* The UMA access tokens are now usable with the Access Grant service
* This adds non-regression tests covering the support for UMA authorization by the Access Grant service.
* **Disallow reactivation of revoked access requests/grants. See :ref:`2.2-disallow-reactivation-ag` for details.**
* The CORS headers on the Access Service endpoints didn't include the `WWW-Authenticate` headers. This resulted in a browser client to be unable to discover the UMA server on a 401 response.

Additions
~~~~~~~~~

* The Access Grant service now produces audit events when an access credential is issued
* The Access Grant service now produces audit events when an access credential is retrieved
* The Access Grant service now produces audit events when a credential is revoked
* The Access Grant service now produces audit events when a client interacts with the validation endpoint
* Audit logs are now produced when access grants are used to access a resource
* The Access Grant service now produces audit events when a client interacts with the status endpoint
* The AccessGrant service now produces audit events during startup and shutdown
* The audit events from the Access Grant service are now integrated into the OpenTelemetry (observability) system to make it easier for an operator to correlate audit logs
* An audit event is emitted by the Access Grant service in response to authorization enforcement
* Access Grant audits contain now the Resource information in the Object field.

UMA
---


Bugs fixed
~~~~~~~~~~

* The UMA access tokens are now usable with the Access Grant service
* This adds non-regression tests covering the support for UMA authorization by the Access Grant service.
* The UMA service's mechanism for validating Access Grants from ESS 2.0 was updated to use the correct URL path on the Access Grant service

Updates
~~~~~~~

* Improve logging output and structure for the UMA service

Audit
-----


Additions
~~~~~~~~~

* Access Grant audits contain now the Resource information in the Object field.
* Various audit events now include client ID values, identifying the application in use. See :ref:`2.2-audit-events-clientid` for details.
* The ``agent`` information has been added to the ``acr_created``, ``acr_deleted``, ``provisioned-pod-access-control``, ``deprovisioned-pod-access-control``  events.
* Audit event that come from actions performed on the Pod (for example: resource create, update and deleted audit events) will now be enriched with the Pod Data Subject.
* **The Audit Enricher service is an intermediary between existing audit events producers and the audit service. This is a new service running among the other ESS applications**
* Audit events from the Fragments service have been updated to contain Pod Storage metadata
* Added a new Kafka topic as part of the Audit Correlation work.  For the topic, requires the setting of ``INRUPT_KAFKA_AUDITV1EVENTSPRODUCERENCRYPTED_CIPHER_PASSWORD`` in the the overlay input file ``kafka-credentials.env``. When upgrading from 2.1 to 2.2, the password must be set.

Updates
~~~~~~~

* Improve the logging output and structure for the Audit service
* If an audit event is about more than one resource, we add the Pod Data Subject of each resource in the instrument field. 
* The provisioned-pod-access-control event  Storage information was moved from the object section to the instrument section of the audit message.

None
~~~~

* A migration is performed to create a System resource for every Pod that contains information about the Pod Data Subject.

QPF
---


Additions
~~~~~~~~~

* Audit events from the Fragments service have been updated to contain Pod Storage metadata

Bugs fixed
~~~~~~~~~~

* This change improves the resiliency of the fragments (qpf) indexer
* The Fragments service was susceptible to a bug related to integer overflows in an ID column, including the marshaling of  that data to and from the database. The service now supports larger-sized integers throughout the database and code.
* The postgres persistence layer of the QPF service has been updated to  support larger integer values, allowing the application to support more data

Updates
~~~~~~~

* Update error response to 404 (previously 400) for malformed fragment query requests.
* Improve logging output and structure for the Query service

Deployment
----------


Additions
~~~~~~~~~

* Added a new Kafka topic as part of the Audit Correlation work.  For the topic, requires the setting of ``INRUPT_KAFKA_AUDITV1EVENTSPRODUCERENCRYPTED_CIPHER_PASSWORD`` in the the overlay input file ``kafka-credentials.env``. When upgrading from 2.1 to 2.2, the password must be set.

Authorization
-------------


Updates
~~~~~~~

* The provisioned-pod-access-control event  Storage information was moved from the object section to the instrument section of the audit message.
* Improve logging output and structure for the Authorization service

Bugs fixed
~~~~~~~~~~

* The ACP server now returns a syntactically valid WWW-Authenticate HTTP header

ESS
---


Additions
~~~~~~~~~

* Enable logging of service configuration upon service startup.
* Enable configuring startup config logger.
* Add ability to redact fields in logs.
* **When provisioning a new Pod, the default root ACR allows agents holding an Access Grant to exercise it effectively, and get the granted level of Access to a resource targeted by the Access Grant. It is no longer necessary to go and edit the resource's ACR (or one of its ancestors") to make the Access Grant actionable.   By default, the ACR allows to exercise Access Grants giving any combination of read, append and write permissions. The  `inrupt.authorization.default-acr.access-grants.allowed-modes` configuration can be used to control the maximum level of permissions an Access Grant can deliver. It will not prevent from issuing an Access Grant with modes that are beyond what the configuration allows, but the effective access permission obtained when exercising the Access Grant will be restricted to the intersection of the modes allowed by the Grant and by the ACR.**

Updates
~~~~~~~

* **For the Start service, a new configuration setting (``QUARKUS_OIDC_TOKEN_STATE_MANAGER_ENCRYPTION_SECRET``) is now required with a minimum length of 32 characters.**
* Use new OpenTelemetry Sampler option to turn traces on and off.   Previous used ``QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENABLED`` no longer exists.  Instead, use the runtime variable: ``QUARKUS_OTEL_TRACES_SAMPLER_ARG``. ``0.0`` is the default and turns off trace. Set ``QUARKUS_OTEL_TRACES_SAMPLER_ARG`` to ``1.0`` to turn on trace; i.e., ``QUARKUS_OTEL_TRACES_SAMPLER_ARG=1.0``.
* **ESS uses three-element version descriptors (instead of two-element version descriptors) for its Kubernetes images; e.g., ``2.2.<num>`` instead of ``2.2``.  For more information, see :ref:`2.2-versioning`.**

Notifications
-------------


Updates
~~~~~~~

* Improve logging output and structure for the Notification service

OpenID
------


Updates
~~~~~~~

* Improve logging output and structure for the OpenID service
* The application approval screen has been updated to be more accurate and readable. 

Bugs fixed
~~~~~~~~~~

* Under certain concurrent conditions, a single user account that fetches multiple OpenID sessions can encounter an error when generating a token. This change makes the server more resilient in these circumstances

Additions
~~~~~~~~~

* The OpenID Broker now supports the IETF RFC 9207, which introduces an `iss` query parameter for all redirect URLs. This parameter can be used to guard against certain categories of exploits in a completely open system of Identity Providers

Start
-----


Updates
~~~~~~~

* Improve the handling of underlying 400 errors encountered by the start service.
* Improve logging output and structure for the Start service

Storage
-------


Additions
~~~~~~~~~

* This change adds a content-security-policy response header, restricting the use of service-workers running directly from Pod-hosted HTML resources
* **This change introduces an DB migration to the Storage Postgres database.**

Updates
~~~~~~~

* The format of the underlying Quarkus-based S3 configuration has changed, and so the deployment YAML files have been adjusted to accommodate the new style

None
~~~~

* Fix to prevent race condition between reading and deleting a resource at the same time.

WebID
-----


Updates
~~~~~~~

* Improve logging output and structure for the WebID service

Internal
--------

* aws-auth in kube-system is divergent from role in Terraform
* Internal Server Error on malformed content types
* Duplicate audit message when running multiple instances of the audit server
* ess-fragments-ingest logging warning about quarkus.datasource.reconciliator.metrics.enabled
* Storage Service fails to reject container payloads that modify resource metadata statements
* Upgrade Wiremock to 2.35.0
* Meaningless provision error when over Pod limit
* This should not be an error: intermediate parent is not a container resource
* Clean up old CloudSmith entitlement tokens
* ess-pod-provision - Undefined prefix: pim
* ess-registration can be removed if we wish
* Home
* Demonstrate image scanning results are being captured and responded to
* jena logging content from inside docs during indexing
* AllState PoC (standalone)
* Setup new repo
* Minimal Authorization DB code
* Minimal Fragments DB code
* Minimal Storage DB code
* Create CLI application
* Minimal logic code
* Integrate Audit
* Design Audit messages
* Create CRON job in envs
* Add new simulation to Gatling
* Consume WebID list
* Pass DB credentials
* Observe App conecting to DBs
* Write deletion logic
* Observe
* Extract CronJob from envs to microservices
* Configure Audit
* Observe Audit
* Integrate Structured Logging
* Refine Job Config
* Tighten Repo security
* Refine Deletion Logic for new Config
* Minimal VC DB Code
* Delete everything from Storage ID
* CVE-2022-41723 in quay.io/strimzi/kafka
* Use implicit transactions
* Use encrypted file input
* Investigate metrics not showing on Sysdig
* Adjust method counted metric name
* Remove gRPC client health check in ess-pod-storage (and any other service that has this health check)
* Investigate missing Sysdig metrics (re:bis)
* Audit Access Grant VCs
* Should there be labels in CronJobs
* Audit Pods
* Feed encrypted files to Kustomize
* Even more fuzzing
* Investigate slow deletion times for VCs
* Backport mypy fix in microservices
* Optimize VC Deletion Query
* Update README
* Read access to internal repos for Pete
* Storage fails to parse some subject nodes in server-managed triples filter
* Design: Logging
* Include kustomize replacement for INRUPT_UMA_VC_ISSUER_ALLOW_LIST
* Update consumers of Wrapping to new group Id
* Stabilization: Logging is going in to overage and we don't know why
* CVE-2022-45688 in quay.io/strimzi/kafka
* CVE-2023-27561 in index.docker.io/library/postgres
* Determine the TTFB for 98% of GET requests against ESS on the Orange Cloud
* 2023-05-23 TF Updates
* 2023-05-30 TF Updates
* Determine what we need to do about ODRL Access Grant/Requests in 2.1
* Undo manual hack of MTLS_KEYSTORE_PASSWORD
* Prevent ODRL access grants from been issued and block access to new endpoints
* Check ESS works with Kubernetes 1.27
* Mezmo keeps going into overage
* Audit logs cuts off after two minutes when sending to syslog
* 2023-06-06 TF Updates
* 2023-06-13 TF Updates
* Decommission the pentest-2023-q1 environment
* Design: Access Grant Default Expiration Value
* Remove RAW_REPOSITORY_TOKEN from enterprise-microservices
* What is the minimum version of Kubernetes supported by ESS 2.1?
* Audit Access Grant/Request has been deleted
* Harmonize on workflows v5
* w/c 2023-06-19 security updates on source repos
* w/c 2023-06-26 security updates on source repos
* w/c 2023-07-03 security updates on source repos
* CVE-2022-45690 affects strimzi-kafka
* CVE-2022-45689 in strimzi
* Move to kind 0.20
* Consume inrupt/workflows without WORKFLOWS_SSH_KEY
* CVE-2023-34455: org.xerial.snappy.snappy-java-1.1.8.4
* microservices build has failed 6 times and is blocking all other builds
* Logging: Refactoring
* Logging: enterprise-acp
* Logging: enterprise-report-browser
* Logging: enterprise-data-deletion
* Logging: enterprise-permissions
* Logging: enterprise-storage
* Logging: enterprise-reconciliator
* enterprise-quarkus-extensions
* enterprise-components
* Certificate expiry is a bit too trigger happy, reduce to 10 days
* Evaluate security implication of serving HTML directly from a Pod
